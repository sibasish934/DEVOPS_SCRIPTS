Prerequisites : 

1: Check the machines of the cluster can ping each other via ip and hostname    \\\\\\\    hostnamectl set-hostname master   \\\ vi /etc/hosts  
2: Swap should be off									///   free -h
3: Respective Ports in the firewall should be opened						//// systemctl status firewalld
4: Check for the minimum configuration of the machine from the official documentation

Commands to run on all the nodes

# Get sudo working
sudo -l 

# update packages and their version
sudo apt-get update && sudo apt-get upgrade -y

# install curl and apt-transport-https
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gpg

# we have to create directory
sudo mkdir -p /etc/apt/keyrings

#add key to verify releases
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list   add kubernetes apt repo 
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list


# install kubelet, kubeadm and kubectl
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl


# install docker
sudo apt-get install docker.io -y


# apt-mark hold is used so that these packages will not be updated/removed automatically
sudo apt-mark hold kubelet kubeadm kubectl


#After the above commands are successfully run on all the worker nodes. Below steps can be followed to initialize the Kubernetes cluster.

#On Leader Node
#Run the below command on the node that you want to make the leader node. Please make sure you replace the correct IP of the node with IP-of-Node

kubeadm init --pod-network-cidr=10.244.0.0/16 -v=9



#Join worker nodes to the Leader node
#Once the command kubeadm init is completed on the leader node, below we would get a command like below in the output of kubeadm init that can be run on worker nodes to make them join the leader node.

kubeadm join 206.189.134.39:6443 --token dxxfoj.a2zzwbfrjejzir4h \
    --discovery-token-ca-cert-hash sha256:110e853989c2401b1e54aef6e8ff0393e05f18d531a75ed107cf6c05ca4170eb



kubectl get pods -n kube-system



#Install CNI plugin
#The below command can be run on the leader node to install the CNI plugin

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml



#Setting up Kubeconfig file
#After successful completion of kubeadm init command, like we got the kubeadm join command, we would also get details about how we can set up kubeconfig file.




kubectl create deployment nginx --image nginx

kubectl expose deployment nginx --type NodePort --port 80

kubectl get all
